name: Acceptance Tests

on:
  push:
    branches: [ main, update_gh_action ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  get_version_matrix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: get_version_matrix
      shell: bash
      run: scripts/get-version-matrix.sh
    outputs:
      version_matrix: ${{ steps.get_version_matrix.outputs.matrix }}

  acc_test:
    needs: get_version_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_version:  ${{ fromJson(needs.get_version_matrix.outputs.version_matrix) }}
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - run: go version

      # TODO: simulate today's `make testacc` command by modifying makefile.
      # We'll have to do this in two steps: 1. Pre-test setup, and 2. 'go test', which
      # is run by gotestsum. Unfortunately, the `go test` command must be run by gotestsum.
      - name: Acceptance Tests
        env:
          KUBE_CONFIG_PATH: "${HOME}/.kube/config"
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform_version }}
          TF_ACC: true
        run: |
          which go
          go install gotest.tools/gotestsum@v1.6.4
          minikube start
          gotestsum --junitfile test-results.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test Results (Terraform ${{ matrix.terraform-version }})
          path: test-results.xml

  publish-test-results:
    name: "Publish Tests Results"
    needs: acc_test
    runs-on: ubuntu-latest
    # This will skip uploading test results if the acceptance tests were skipped.
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@2c1638db7746f235576536a706b83d2eece7f413
        with:
          files: artifacts/**/*.xml
